#!/usr/bin/env bash

set -e
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

type jq

echo "Parsing VCAP_SERVICES"

cd $BUILD_DIR
mkdir -p .profile.d
touch .profile.d/parse.sh

# Find the number of user-provided services
LENGTH=$(cat $VCAP_SERVICES | jq '.["user-provided"] | length')
echo "Found $LENGTH services"
LENGTH=$(($LENGTH - 1))

for n in $(seq 0 $LENGTH); do
  # The name of the service is nested in VCAP_SERVICES, so pull that out
  NAME=$(cat $VCAP_SERVICES | jq --argjson n $n '.["user-provided"][$n]["name"]')
  echo "Getting settings for $NAME"

  # Create arrays for keys and values
  # There may be a cleaner way to do this, but it works
  KEYS=($(cat $VCAP_SERVICES | jq -r --argjson n $n '.["user-provided"][$n]["credentials"] | keys[]'))
  VALUES=($(cat $VCAP_SERVICES | jq -r --argjson n $n '.["user-provided"][$n]["credentials"][]'))

  # Loop through the arrays in parallel and create export statements
  COUNTER=0
  while [ $COUNTER -lt  ${#KEYS[@]} ]; do
    echo "export $name-${KEYS[$COUNTER]}=${VALUES[$COUNTER]}" >> .profile.d/parse.sh
    let COUNTER=COUNTER+1
  done
done
